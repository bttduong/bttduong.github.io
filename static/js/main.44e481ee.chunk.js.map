{"version":3,"sources":["assets/images/search.svg","components/SearchBar/SearchBar.tsx","constants/path.ts","services/restClient.ts","services/constants.ts","services/index.ts","shared/Header/Header.tsx","assets/images/close.svg","pages/Home/CityList.tsx","assets/images/liked.svg","pages/Home/Home.tsx","pages/CityDetail/Note.tsx","assets/images/note.png","assets/images/like.svg","pages/CityDetail/CityDetail.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SearchBar","props","searchText","setSearchText","onSearch","className","src","SearchIm","alt","style","opacity","margin","value","placeholder","onChange","e","target","onKeyPress","event","keyCode","which","PATH","BASE","DETAIL","instance","axios","create","baseURL","timeout","defaults","params","url","get","TOP15","FAVORITES","TOP_CITIES","SEPARATOR","saveCurrentByCity","weather","city","localStorage","setItem","JSON","stringify","location","name","getFavorites","favs","favStr","getItem","split","sort","a","b","localeCompare","topCities","topCitiesStr","join","data","Promise","resolve","status","parse","restClient","GET_CURRENT","idx","indexOf","splice","push","like","Header","useState","history","useHistory","useEffect","window","navigator","geolocation","getCurrentPosition","position","services","coords","latitude","longitude","then","handleSearchRes","res","current","pathname","state","failCb","display","height","to","exact","activeClassName","marginLeft","catch","error","CityList","label","cities","onItemRemove","length","map","onClick","cardClick","flex","country","condition","icon","fontSize","width","temp_c","toFixed","CloseIm","stopPropagation","onCardRemove","Home","setTopCities","favCities","setFavCities","forEach","LikedIm","filter","c","Note","note","onSave","editing","setValue","alignItems","rows","cols","disabled","CityDetail","useParams","setCity","undefined","editingNote","setEditingNote","genRow","unit","fontWeight","NoteIm","LikeIm","newCity","marginBottom","localtime","marginTop","textAlign","text","feelslike_c","wind_kph","wind_degree","wind_dir","pressure_mb","humidity","cloud","uv","vis_km","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAAe,G,MAAA,IAA0B,oCCwC1BA,EA5BG,SAACC,GAAkB,IAC3BC,EAAwCD,EAAxCC,WAAYC,EAA4BF,EAA5BE,cAAeC,EAAaH,EAAbG,SAQnC,OACE,sBAAKC,UAAW,iBAAhB,UACE,qBACEC,IAAKC,EACLC,IAAI,SACJC,MAAO,CAAEC,QAAS,GAAKC,OAAQ,kBAEjC,uBACEN,UAAW,mBAEXO,MAAOV,EACPW,YAAa,cACbC,SAAU,SAACC,GAAD,OAAOZ,EAAcY,EAAEC,OAAOJ,QACxCK,WAnBa,SAACC,GAEL,MADFA,EAAMC,SAAWD,EAAME,QAEhChB,MAYM,eCzBGiB,EALF,CACXC,KAAM,IACNC,OAAQ,U,eCEJC,E,OAAWC,EAAMC,OAAO,CAAEC,QAFnB,iCAEkCC,QAAS,MACxDJ,EAASK,SAASC,OAAS,GAC3BN,EAASK,SAASC,OAAlB,IAAkC,kCAElC,IAIe,EAJH,SAACC,GACX,OAAOP,EAASQ,IAAID,ICTTE,EAAQ,CACnB,QACA,QACA,WACA,YACA,cACA,QACA,QACA,UACA,SACA,YACA,UACA,YACA,WACA,eACA,WCRIC,EAAY,YACZC,EAAa,aACbC,EAAY,IAgCZC,EAAoB,SAACC,EAAyBC,GAC9CA,EAAMC,aAAaC,QAAQF,EAAMG,KAAKC,UAAUL,IAC/CE,aAAaC,QAAQH,EAAQM,SAASC,KAAMH,KAAKC,UAAUL,KAkB5DQ,EAAe,WACnB,IACIC,EADEC,EAASR,aAAaS,QAAQf,GAUpC,OAPIc,EACFD,EAAOC,EAAOE,MAAM,MAEpBH,EAAO,GACPP,aAAaC,QAAQP,EAAW,KAG3Ba,EAAKI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,OAyC9B,EAjGM,WACnB,IACIE,EADAC,EAAehB,aAAaS,QAAQd,GAUxC,OAPqB,OAAjBqB,GACFD,EAAYtB,EAAMkB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACjDb,aAAaC,QAAQN,EAAYoB,EAAUE,KAAKrB,KAEhDmB,EAAYC,EAAaN,MAAMd,GAG1BmB,GAsFM,EAnFU,SAAChB,GACxB,IAAMmB,EAAOlB,aAAaS,QAAQV,GAElC,OAAImB,EACK,IAAIC,SAAQ,SAACC,GAClBA,EAAQ,CAAEC,OAAQ,IAAKH,KAAMhB,KAAKoB,MAAMJ,QAGrCK,EAzBW,SAACxB,GAAD,gBADP,gBACO,cAA+BA,GAyB3ByB,CAAYzB,KA2ErB,EAGbF,EAHa,EAnEO,SAACQ,GACrB,IAAMW,EAAehB,aAAaS,QAAQd,GAE1C,GAAIqB,EAAc,CAChB,IAAID,EAAsBC,EAAaN,MAAMd,GAEvC6B,EAAMV,EAAUW,QAAQrB,IACjB,IAAToB,IACFV,EAAUY,OAAOF,EAAK,GACtBzB,aAAaC,QAAQN,EAAYoB,EAAUE,KAAKrB,OA0DvC,EAKbU,EALa,EAtCK,SAACP,GACnB,IACIQ,EADEC,EAASR,aAAaS,QAAQf,IAIlCa,EADEC,EACKA,EAAOE,MAAMd,GACR,IAETgC,KAAK7B,GAEVC,aAAaC,QAAQP,EAAWa,EAAKU,KAAKrB,KA4B7B,EAzBQ,SAACS,GACtB,IAAMG,EAASR,aAAaS,QAAQf,GAEpC,GAAIc,EAAQ,CACV,IAAID,EAAiBC,EAAOE,MAAMd,GAE5B6B,EAAMlB,EAAKmB,QAAQrB,IACZ,IAAToB,IACFlB,EAAKoB,OAAOF,EAAK,GACjBzB,aAAaC,QAAQP,EAAWa,EAAKU,KAAKrB,OAgBjC,EAXsB,SACnCE,EACAO,GAGA,OADAR,EAAkBC,EAASO,GACpB,2BACFP,GADL,IAEE+B,MAAyD,IAAnDvB,IAAeoB,QAAQ5B,EAAQM,SAASC,SCdnCyB,G,MAhFA,WAAO,IAAD,EACiBC,qBADjB,mBACZrE,EADY,KACAC,EADA,KAGfqE,EAAUC,cAEdC,qBAAU,WASJC,OAAOC,UAAUC,aACnBF,OAAOC,UAAUC,YAAYC,oBATb,SAACC,GACjBC,EAAA,UAEOD,EAASE,OAAOC,SAFvB,aAEoCH,EAASE,OAAOE,YAEjDC,KAAKC,QAOT,IAEH,IAAMA,EAAkB,SAACC,GACnBA,GAAsB,MAAfA,EAAIzB,QAAkByB,EAAI5B,MAAQ4B,EAAI5B,KAAK6B,QACpDf,EAAQJ,KAAK,CACXoB,SAAS,GAAD,OAAKnE,EAAKC,MAAV,OAAiBD,EAAKE,OAAtB,YAAgC+D,EAAI5B,KAAKd,SAASC,MAC1D4C,MAAOT,EAAsCM,EAAI5B,QAGnDgC,KAIEA,EAAS,kBACblB,EAAQJ,KAAK,CACXoB,SAAS,GAAD,OAAKnE,EAAKC,MAAV,OAAiBD,EAAKE,OAAtB,YAAgCrB,GACxCuF,MAAO,QAcX,OACE,wBAAQpF,UAAU,aAAlB,SACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKI,MAAO,CAAEkF,QAAS,OAAQC,OAAQ,QAAvC,UACE,cAAC,IAAD,CACEC,GAAG,IACHC,OAAK,EACLC,gBAAgB,gBAChB1F,UAAU,cAJZ,kBASA,cAAC,IAAD,CACE0F,gBAAgB,gBAChB1F,UAAU,cACVI,MAAO,CAAEuF,WAAY,IACrBH,GAAG,UAJL,4BASF,cAAC,EAAD,CACE3F,WAAYA,EACZC,cAAeA,EACfC,SApCO,WACTF,GACF8E,EACoB9E,GACjBkF,KAAKC,GACLY,OAAM,SAACC,GACNR,iB,QC1DK,G,MAAA,IAA0B,mCCoF1BS,EAhEE,SAAClG,GAAkB,IAC1BmG,EAAgCnG,EAAhCmG,MAAOC,EAAyBpG,EAAzBoG,OAAQC,EAAiBrG,EAAjBqG,aAEnB9B,EAAUC,cAiBd,OACE,sBAAKhE,MAAO,CAAEE,OAAQ,UAAtB,UACE,qBAAKN,UAAU,uBAAf,SAAuC+F,IAEvC,qBAAK/F,UAAU,YAAf,SACGgG,GAAUA,EAAOE,OAAS,EACzBF,EAAOG,KAAI,SAACjE,EAAM0B,GAAP,OAET,cADA,CACA,OAEE5D,UAAW,YACXoG,QAAS,kBA1BH,SAAClE,GACjBiC,EAAQJ,KAAK,CACXoB,SAAS,GAAD,OAAKnE,EAAKC,MAAV,OAAiBD,EAAKE,OAAtB,YAAgCgB,EAAKK,SAASC,MACtD4C,MAAOlD,IAuBgBmE,CAAUnE,IAH3B,UAKE,sBAAKlC,UAAW,oBAAhB,UACE,sBAAKI,MAAO,CAAEkG,KAAM,GAApB,UACGpE,EAAKK,SAASC,KADjB,KACwB,uBACrBN,EAAKK,SAASgE,WAEjB,qBACEtG,IAAKiC,EAAKgD,QAAQsB,UAAUC,KAC5BtG,IAAI,eACJH,UAAW,sBAEb,uBAAMI,MAAO,CAAEsG,SAAU,GAAIC,MAAO,IAApC,UACGzE,EAAKgD,QAAQ0B,OAAOC,QAAQ,GAD/B,cAKF,qBACE5G,IAAK6G,EACL3G,IAAI,QACJH,UAAU,cACVoG,QAAS,SAACvF,GAAD,OAxCF,SACnBA,EACA2B,GAEA3B,EAAMkG,kBACNd,EAAazD,GAmCmBwE,CAAanG,EAAOqB,EAAKK,SAASC,WAvBnDoB,MA4BT,mBAAGxD,MAAO,CAAEC,QAAS,GAAKC,OAAQ,iBAAlC,8BC7EK,MAA0B,kCCmF1B2G,EApEF,WAAO,IAAD,EACiB/C,mBAA2B,IAD5C,mBACVhB,EADU,KACCgE,EADD,OAEiBhD,mBAA2B,IAF5C,mBAEViD,EAFU,KAECC,EAFD,KAIjB/C,qBAAU,WACUM,IAER0C,SAAQ,SAACnF,GACbA,GACFyC,EAA0BzC,GAAM6C,MAAK,SAACE,GAChCA,GAAsB,MAAfA,EAAIzB,QACTyB,EAAI5B,MAAQ4B,EAAI5B,KAAK6B,SACvBgC,GAAa,SAAClB,GAAD,4BACRA,GADQ,CAEXrB,EAAsCM,EAAI5B,iBAQ5BsB,IAEhB0C,SAAQ,SAACnF,GACjByC,EAA0BzC,GAAM6C,MAAK,SAACE,GACpCmC,GAAa,SAACpB,GAAD,4BAAgBA,GAAhB,aAAC,eAA4Bf,EAAI5B,MAAjC,IAAuCW,MAAM,SAE1DW,EAA2BM,EAAI5B,cAGlC,IAWH,OACE,gCACE,cAAC,EAAD,CACE0C,MACE,iDAEE,qBACE9F,IAAKqH,EACLnH,IAAI,OACJC,MAAO,CAAEuG,MAAO,GAAIhB,WAAY,SAItCK,OAAQmB,EACRlB,aAvBc,SAACzD,GACnBmC,EAAwBnC,GACxB4E,GAAa,SAACpB,GAAD,OAAYA,EAAOuB,QAAO,SAACC,GAAD,OAAOA,EAAEjF,SAASC,OAASA,WAwBhE,cAAC,EAAD,CACEuD,MAAM,aACNC,OAAQ9C,EACR+C,aAzBkB,SAACzD,GACvBmC,EAAuBnC,GACvB0E,GAAa,SAAClB,GAAD,OAAYA,EAAOuB,QAAO,SAACC,GAAD,OAAOA,EAAEjF,SAASC,OAASA,eCOvDiF,G,MAjDF,SAAC7H,GAAkB,IACtB8H,EAA0B9H,EAA1B8H,KAAMC,EAAoB/H,EAApB+H,OAAQC,EAAYhI,EAAZgI,QADO,EAGH1D,mBAASwD,GAHN,mBAGtBnH,EAHsB,KAGfsH,EAHe,KAK7BxD,qBAAU,WACRwD,EAASH,KACR,CAACA,IAeJ,OACE,sBAAKtH,MAAO,CAAEkF,QAAS,OAAQwC,WAAY,YAA3C,UACIF,GAAYrH,EACZ,0BACEC,YAAY,oBACZR,UAAU,YACV+H,KAAM,EACNC,KAAM,GACNvH,SArBY,SAACC,GACnBmH,EAASnH,EAAEC,OAAOJ,QAqBZ0H,UAAWL,EANb,SAQGrH,IATiB,KAYrBqH,GACC,gCACE,wBAAQ5H,UAAU,SAASoG,QArBlB,WACfuB,EAAO,IACPE,EAAS,KAmBH,oBAGA,wBAAQ7H,UAAU,SAASoG,QA5Bf,WAClBuB,EAAOpH,IA2BD,0BCrDK,MAA0B,iCCA1B,MAA0B,iCCiK1B2H,EA7II,SACjBtI,GACI,IACE4C,EAAS2F,cAAT3F,KAEE4C,EADaxF,EAAb2C,SACA6C,MAHL,EAKqBlB,mBAAgCkB,GALrD,mBAKIlD,EALJ,KAKUkG,EALV,OAMmClE,wBAAwBmE,KAAX,OAAJnG,QAAI,IAAJA,OAAA,EAAAA,EAAMwF,OANlD,mBAMIY,EANJ,KAMiBC,EANjB,KAQHlE,qBAAU,WACR+D,EAAQhD,KACP,CAACA,IAEJf,qBAAU,YACHnC,GAAQM,GACXmC,EAA0BnC,GAAMuC,MAAK,SAACE,GACpC,GAAIA,GAAsB,MAAfA,EAAIzB,QAAkByB,EAAI5B,MAAQ4B,EAAI5B,KAAK6B,QAAS,CAC7D,IAAMhD,EAAO+C,EAAI5B,KAEjB+E,EAAQzD,EAAsCzC,EAAMM,IAEhDA,IAASN,EAAKK,SAASC,MAAMmC,EAA2BM,EAAI5B,WAEhE+E,EAAQ,WAIb,CAAClG,EAAMM,IAEV,IAuBMgG,EAAS,SACbzC,EACAxF,GAEI,IADJkI,EACG,uDAD0B,GAE7B,OACE,sBAAKzI,UAAW,kBAAhB,UACE,qBAAKI,MAAO,CAAEC,QAAS,IAAvB,SAA+B0F,IAC/B,sBAAK3F,MAAO,CAAEsG,SAAU,GAAIgC,WAAY,KAAxC,UACGnI,EACAkI,SAMT,OAAOvG,EACL,gCACE,sBAAKlC,UAAU,oBAAf,UACE,+BACGkC,EAAKK,SAASC,KADjB,KACyBN,EAAKK,SAASgE,WAEvC,sBAAKnG,MAAO,CAAEkF,QAAS,OAAQwC,WAAY,UAA3C,UACE,qBACE7H,IAAK0I,EACLxI,IAAI,OACJH,UAAW,qBACXoG,QAxCa,WAChBkC,GAAaC,GAAgBD,MAyC5B,qBACErI,IAAKiC,EAAK8B,KAAOsD,EAAUsB,EAC3BzI,IAAI,OACJH,UAAW,qBACXoG,QAxDS,WACblE,IACFA,EAAK8B,KACDW,EAAwBzC,EAAKK,SAASC,MACtCmC,EAAqBzC,EAAKK,SAASC,MAEvC4F,EAAQ,2BAAKlG,GAAN,IAAY8B,MAAO9B,EAAK8B,kBAsD/B,cAAC,EAAD,CAAM0D,KAAMxF,EAAKwF,KAAMC,OA/CV,SAACD,GAChB,GAAIxF,EAAM,CACR,IAAM2G,EAAO,2BAAQ3G,GAAR,IAAcwF,SAC3BU,EAAQS,GACRlE,EAA2BkE,GAE3BN,GAAe,KAyC0BX,QAASU,IAElD,mBAAGlI,MAAO,CAAEsG,SAAU,GAAIgC,WAAY,IAAKI,aAAc,GAAzD,6BAGA,mBAAG9I,UAAW,aAAd,SAA6BkC,EAAKK,SAASwG,YAC3C,sBACE3I,MAAO,CAAEkF,QAAS,OAAQwC,WAAY,SAAUpD,SAAU,YAD5D,UAGE,sBAAK1E,UAAU,uBAAf,UACE,qBACEC,IAAKiC,EAAKgD,QAAQsB,UAAUC,KAC5BtG,IAAI,eACJwG,MAAO,MAET,mBAAGvG,MAAO,CAAE4I,UAAW,EAAGC,UAAW,UAArC,SACG/G,EAAKgD,QAAQsB,UAAU0C,UAK5B,sBAAK9I,MAAO,CAAEuF,WAAY,IAA1B,UACE,sBAAK3F,UAAU,mBAAf,UACGkC,EAAKgD,QAAQ0B,OADhB,OAEE,sBAAMxG,MAAO,CAAEsG,SAAU,GAAIf,YAAa,GAAItF,QAAS,IAAvD,kBAIF,sBAAKL,UAAW,uBAAhB,uBACakC,EAAKgD,QAAQiE,YAD1B,gBAMJ,sBAAKnJ,UAAU,uBAAf,UACGwI,EAAO,OAAQtG,EAAKgD,QAAQkE,SAAU,QACtCZ,EAAO,cAAetG,EAAKgD,QAAQmE,YAAa,8CAChDb,EAAO,iBAAkBtG,EAAKgD,QAAQoE,UAEtCd,EAAO,WAAYtG,EAAKgD,QAAQqE,YAAa,MAC7Cf,EAAO,WAAYtG,EAAKgD,QAAQsE,SAAU,KAC1ChB,EAAO,cAAetG,EAAKgD,QAAQuE,MAAO,KAC1CjB,EAAO,WAAYtG,EAAKgD,QAAQwE,IAChClB,EAAO,aAActG,EAAKgD,QAAQyE,OAAQ,YAI/C,6CChIWC,EAlBH,WACV,OACE,cAAC,IAAD,UACE,sBAAK5J,UAAU,UAAf,UACE,cAAC,EAAD,IAEA,sBAAKA,UAAU,cAAf,UACE,cAAC,IAAD,CAAO6J,KAAK,IAAIpE,OAAK,EAACqE,UAAW7C,IACjC,cAAC,IAAD,CACE4C,KAAI,UAAK7I,EAAKC,MAAV,OAAiBD,EAAKE,OAAtB,UACJ4I,UAAW5B,aCPR6B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlF,MAAK,YAAkD,IAA/CmF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.44e481ee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.812c11b6.svg\";","import React from \"react\";\n\nimport \"./search-bar.css\";\n\nimport SearchIm from \"../../assets/images/search.svg\";\n\ntype Props = {\n  searchText: string | undefined;\n  setSearchText: (value: string) => void;\n  onSearch: () => void;\n};\n\nconst SearchBar = (props: Props) => {\n  const { searchText, setSearchText, onSearch } = props;\n\n  const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    var code = event.keyCode || event.which;\n    if (code === 13) {\n      onSearch();\n    }\n  };\n  return (\n    <div className={\"search-bar-ctn\"}>\n      <img\n        src={SearchIm}\n        alt=\"search\"\n        style={{ opacity: 0.5, margin: \"0 8px 0 12px\" }}\n      />\n      <input\n        className={\"search-bar-input\"}\n        key=\"random1\"\n        value={searchText}\n        placeholder={\"Search City\"}\n        onChange={(e) => setSearchText(e.target.value)}\n        onKeyPress={onKeyPress}\n      />\n    </div>\n  );\n};\n\nexport default SearchBar;\n","const PATH = {\n  BASE: \"/\",\n  DETAIL: \"detail\",\n};\n\nexport default PATH;\n","import axios from \"axios\";\n\nconst BASE = \"https://api.weatherapi.com/v1/\";\n\nconst instance = axios.create({ baseURL: BASE, timeout: 3000 });\ninstance.defaults.params = {};\ninstance.defaults.params[\"key\"] = \"41a3e4d0c8414773969125202200812\"; // TODO:\n\nconst get = (url: string) => {\n  return instance.get(url);\n};\n\nexport default { get };\n","export const TOP15 = [\n  \"Tokyo\",\n  \"Delhi\",\n  \"Shanghai\",\n  \"Sao Paulo\",\n  \"Mexico City\",\n  \"Dhaka\",\n  \"Cairo\",\n  \"Beijing\",\n  \"Mumbai\",\n  \"Osaka-Shi\",\n  \"Karachi\",\n  \"Chongqing\",\n  \"Istanbul\",\n  \"Buenos Aires\",\n  \"Kolkata\",\n];\n","import restClient from \"./restClient\";\n\nimport { CurrentWeather, CurrentWeatherRes } from \"../types\";\n\nimport { TOP15 } from \"./constants\";\n\n/** localStorage key */\nconst FAVORITES = \"FAVORITES\";\nconst TOP_CITIES = \"TOP_CITIES\";\nconst SEPARATOR = \"|\";\n\n/** ENDPOINT */\nconst BASE = \"/current.json\";\nconst GET_CURRENT = (city: string) => `${BASE}?q=${city}`;\n\n// TOP CITIES\nconst getTopCities = (): string[] => {\n  let topCitiesStr = localStorage.getItem(TOP_CITIES);\n  let topCities: string[];\n\n  if (topCitiesStr === null) {\n    topCities = TOP15.sort((a, b) => a.localeCompare(b));\n    localStorage.setItem(TOP_CITIES, topCities.join(SEPARATOR));\n  } else {\n    topCities = topCitiesStr.split(SEPARATOR);\n  }\n\n  return topCities;\n};\n\nconst getCurrentByCity = (city: string) => {\n  const data = localStorage.getItem(city);\n\n  if (data)\n    return new Promise((resolve) => {\n      resolve({ status: 200, data: JSON.parse(data) });\n    });\n\n  return restClient.get(GET_CURRENT(city));\n};\n\nconst saveCurrentByCity = (weather: CurrentWeather, city?: string) => {\n  if (city) localStorage.setItem(city, JSON.stringify(weather));\n  else localStorage.setItem(weather.location.name, JSON.stringify(weather));\n};\n\nconst removeTopCity = (name: string) => {\n  const topCitiesStr = localStorage.getItem(TOP_CITIES);\n\n  if (topCitiesStr) {\n    let topCities: string[] = topCitiesStr.split(SEPARATOR);\n\n    const idx = topCities.indexOf(name);\n    if (idx !== -1) {\n      topCities.splice(idx, 1);\n      localStorage.setItem(TOP_CITIES, topCities.join(SEPARATOR));\n    }\n  }\n};\n\n// FAVORITES\nconst getFavorites = () => {\n  const favStr = localStorage.getItem(FAVORITES);\n  let favs: string[];\n\n  if (favStr) {\n    favs = favStr.split(\"|\");\n  } else {\n    favs = [];\n    localStorage.setItem(FAVORITES, \"\");\n  }\n\n  return favs.sort((a, b) => a.localeCompare(b));\n};\n\nconst addFavorite = (city: string) => {\n  const favStr = localStorage.getItem(FAVORITES);\n  let favs: string[];\n\n  if (favStr) {\n    favs = favStr.split(SEPARATOR);\n  } else favs = [];\n\n  favs.push(city);\n\n  localStorage.setItem(FAVORITES, favs.join(SEPARATOR));\n};\n\nconst removeFavorite = (name: string) => {\n  const favStr = localStorage.getItem(FAVORITES);\n\n  if (favStr) {\n    let favs: string[] = favStr.split(SEPARATOR);\n\n    const idx = favs.indexOf(name);\n    if (idx !== -1) {\n      favs.splice(idx, 1);\n      localStorage.setItem(FAVORITES, favs.join(SEPARATOR));\n    }\n  }\n};\n\nconst appendFavoriteInfoNSaveLocal = (\n  weather: CurrentWeatherRes,\n  name?: string\n): CurrentWeather => {\n  saveCurrentByCity(weather, name);\n  return {\n    ...weather,\n    like: getFavorites().indexOf(weather.location.name) !== -1,\n  };\n};\n\nexport default {\n  getTopCities,\n  getCurrentByCity,\n  saveCurrentByCity,\n  removeTopCity,\n  getFavorites,\n  addFavorite,\n  removeFavorite,\n  appendFavoriteInfoNSaveLocal,\n};\n","/** react */\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\n/** ui */\nimport SearchBar from \"../../components/SearchBar\";\nimport PATH from \"../../constants/path\";\n\n/** services */\nimport services from \"../../services\";\n\n/** styles */\nimport \"./header.css\";\n\nconst Header = () => {\n  const [searchText, setSearchText] = useState<string>();\n\n  let history = useHistory();\n\n  useEffect(() => {\n    const successCb = (position: GeolocationPosition) => {\n      services\n        .getCurrentByCity(\n          `${position.coords.latitude}, ${position.coords.longitude}`\n        )\n        .then(handleSearchRes);\n    };\n\n    if (window.navigator.geolocation) {\n      window.navigator.geolocation.getCurrentPosition(successCb);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const handleSearchRes = (res: any) => {\n    if (res && res.status === 200 && res.data && res.data.current) {\n      history.push({\n        pathname: `${PATH.BASE}${PATH.DETAIL}/${res.data.location.name}`,\n        state: services.appendFavoriteInfoNSaveLocal(res.data),\n      });\n    } else {\n      failCb();\n    }\n  };\n\n  const failCb = () =>\n    history.push({\n      pathname: `${PATH.BASE}${PATH.DETAIL}/${searchText}`,\n      state: null,\n    });\n\n  const search = () => {\n    if (searchText) {\n      services\n        .getCurrentByCity(searchText)\n        .then(handleSearchRes)\n        .catch((error) => {\n          failCb();\n        });\n    }\n  };\n\n  return (\n    <header className=\"header-ctn\">\n      <div className=\"header-content\">\n        <div style={{ display: \"flex\", height: \"100%\" }}>\n          <NavLink\n            to=\"/\"\n            exact\n            activeClassName=\"header-active\"\n            className=\"header-menu\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            activeClassName=\"header-active\"\n            className=\"header-menu\"\n            style={{ marginLeft: 20 }}\n            to=\"/detail\"\n          >\n            Detail Page\n          </NavLink>\n        </div>\n        <SearchBar\n          searchText={searchText}\n          setSearchText={setSearchText}\n          onSearch={search}\n        />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/close.d1a6d0d8.svg\";","/** react */\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n/** services */\nimport PATH from \"../../constants/path\";\n\n/** styles */\nimport \"./city-list.css\";\nimport CloseIm from \"../../assets/images/close.svg\";\n\n/** types */\nimport { CurrentWeather } from \"../../types\";\n\ntype Props = {\n  label: string | JSX.Element;\n  cities: CurrentWeather[];\n  onItemRemove: (city: string) => void;\n};\n\nconst CityList = (props: Props) => {\n  const { label, cities, onItemRemove } = props;\n\n  let history = useHistory();\n\n  const cardClick = (city: CurrentWeather) => {\n    history.push({\n      pathname: `${PATH.BASE}${PATH.DETAIL}/${city.location.name}`,\n      state: city,\n    });\n  };\n\n  const onCardRemove = (\n    event: React.MouseEvent<HTMLImageElement, MouseEvent>,\n    name: string\n  ) => {\n    event.stopPropagation();\n    onItemRemove(name);\n  };\n\n  return (\n    <div style={{ margin: \"24px 0\" }}>\n      <div className=\"city-list-header-ctn\">{label}</div>\n\n      <div className=\"city-list\">\n        {cities && cities.length > 0 ? (\n          cities.map((city, idx) => (\n            // CITY CARD\n            <div\n              key={idx}\n              className={\"city-card\"}\n              onClick={() => cardClick(city)}\n            >\n              <div className={\"city-card-content\"}>\n                <div style={{ flex: 1 }}>\n                  {city.location.name}, <br />\n                  {city.location.country}\n                </div>\n                <img\n                  src={city.current.condition.icon}\n                  alt=\"weather-icon\"\n                  className={\"city-weather-icon\"}\n                />\n                <span style={{ fontSize: 36, width: 80 }}>\n                  {city.current.temp_c.toFixed(0)}&deg;C\n                </span>\n              </div>\n\n              <img\n                src={CloseIm}\n                alt=\"close\"\n                className=\"city-remove\"\n                onClick={(event) => onCardRemove(event, city.location.name)}\n              />\n            </div>\n          ))\n        ) : (\n          <p style={{ opacity: 0.5, margin: \"0 0 24px 24px\" }}>Empty list</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CityList;\n","export default __webpack_public_path__ + \"static/media/liked.38eb2764.svg\";","/** react */\nimport React, { useState, useEffect } from \"react\";\n\n/** component */\nimport CityList from \"./CityList\";\n\n/** services */\nimport services from \"../../services\";\n\n/** styles */\nimport LikedIm from \"../../assets/images/liked.svg\";\n\n/** types */\nimport { CurrentWeather } from \"../../types\";\n\nconst Home = () => {\n  const [topCities, setTopCities] = useState<CurrentWeather[]>([]);\n  const [favCities, setFavCities] = useState<CurrentWeather[]>([]);\n\n  useEffect(() => {\n    const topCities = services.getTopCities();\n\n    topCities.forEach((city) => {\n      if (city) {\n        services.getCurrentByCity(city).then((res: any) => {\n          if (res && res.status === 200) {\n            if (res.data && res.data.current) {\n              setTopCities((cities) => [\n                ...cities,\n                services.appendFavoriteInfoNSaveLocal(res.data),\n              ]);\n            }\n          }\n        });\n      }\n    });\n\n    let favCities: string[] = services.getFavorites();\n\n    favCities.forEach((city) => {\n      services.getCurrentByCity(city).then((res: any) => {\n        setFavCities((cities) => [...cities, { ...res.data, like: true }]);\n\n        services.saveCurrentByCity(res.data);\n      });\n    });\n  }, []);\n\n  const onRemoveFav = (name: string) => {\n    services.removeFavorite(name);\n    setFavCities((cities) => cities.filter((c) => c.location.name !== name));\n  };\n  const onRemoveTopCity = (name: string) => {\n    services.removeTopCity(name);\n    setTopCities((cities) => cities.filter((c) => c.location.name !== name));\n  };\n\n  return (\n    <div>\n      <CityList\n        label={\n          <>\n            Favorites\n            <img\n              src={LikedIm}\n              alt=\"like\"\n              style={{ width: 24, marginLeft: 16 }}\n            />\n          </>\n        }\n        cities={favCities}\n        onItemRemove={onRemoveFav}\n      />\n\n      <CityList\n        label=\"Top Cities\"\n        cities={topCities}\n        onItemRemove={onRemoveTopCity}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n","/** react */\nimport React, { useState, useEffect } from \"react\";\n\n/** styles */\nimport \"./city-detail.css\";\n\ntype Props = {\n  note?: string;\n  onSave: (note?: string) => void;\n  editing: boolean;\n};\n\nconst Note = (props: Props) => {\n  const { note, onSave, editing } = props;\n\n  const [value, setValue] = useState(note);\n\n  useEffect(() => {\n    setValue(note);\n  }, [note]);\n\n  const updateValue = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setValue(e.target.value);\n  };\n\n  const onSaveValue = () => {\n    onSave(value);\n  };\n\n  const onRemove = () => {\n    onSave(\"\");\n    setValue(\"\");\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"flex-end\" }}>\n      {!editing && !value ? null : (\n        <textarea\n          placeholder=\"your note here...\"\n          className=\"text-area\"\n          rows={3}\n          cols={50}\n          onChange={updateValue}\n          disabled={!editing}\n        >\n          {value}\n        </textarea>\n      )}\n      {editing && (\n        <div>\n          <button className=\"button\" onClick={onRemove}>\n            Remove\n          </button>\n          <button className=\"button\" onClick={onSaveValue}>\n            Save\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Note;\n","export default __webpack_public_path__ + \"static/media/note.dfee6669.png\";","export default __webpack_public_path__ + \"static/media/like.ade31eff.svg\";","/** react */\nimport React, { useState, useEffect } from \"react\";\nimport { StaticContext } from \"react-router\";\nimport { RouteComponentProps, useParams } from \"react-router-dom\";\n\n/** ui */\nimport Note from \"./Note\";\n\n/** services */\nimport services from \"../../services\";\n\n/** styles */\nimport \"./city-detail.css\";\nimport NoteIm from \"../../assets/images/note.png\";\nimport LikeIm from \"../../assets/images/like.svg\";\nimport LikedIm from \"../../assets/images/liked.svg\";\n\n/** types */\nimport { CurrentWeather } from \"../../types\";\n\nconst CityDetail = (\n  props: RouteComponentProps<{}, StaticContext, CurrentWeather>\n) => {\n  let { name } = useParams<{ name: string }>();\n  const { location } = props;\n  const { state } = location;\n\n  const [city, setCity] = useState<CurrentWeather | null>(state);\n  const [editingNote, setEditingNote] = useState(city?.note === undefined);\n\n  useEffect(() => {\n    setCity(state);\n  }, [state]);\n\n  useEffect(() => {\n    if (!city && name) {\n      services.getCurrentByCity(name).then((res: any) => {\n        if (res && res.status === 200 && res.data && res.data.current) {\n          const city = res.data as CurrentWeather;\n\n          setCity(services.appendFavoriteInfoNSaveLocal(city, name));\n\n          if (name !== city.location.name) services.saveCurrentByCity(res.data);\n        } else {\n          setCity(null);\n        }\n      });\n    }\n  }, [city, name]);\n\n  const toggleLike = () => {\n    if (city) {\n      city.like\n        ? services.removeFavorite(city.location.name)\n        : services.addFavorite(city.location.name);\n\n      setCity({ ...city, like: !city.like });\n    }\n  };\n\n  const toggleEditNote = () => {\n    if (!editingNote) setEditingNote(!editingNote);\n  };\n  const saveNote = (note?: string) => {\n    if (city) {\n      const newCity = { ...city, note };\n      setCity(newCity);\n      services.saveCurrentByCity(newCity);\n\n      setEditingNote(false);\n    }\n  };\n\n  const genRow = (\n    label: string,\n    value: string | number,\n    unit: string | JSX.Element = \"\"\n  ) => {\n    return (\n      <div className={\"city-detail-row\"}>\n        <div style={{ opacity: 0.8 }}>{label}</div>\n        <div style={{ fontSize: 18, fontWeight: 500 }}>\n          {value}\n          {unit}\n        </div>\n      </div>\n    );\n  };\n\n  return city ? (\n    <div>\n      <div className=\"detail-header-ctn\">\n        <h2>\n          {city.location.name}, {city.location.country}\n        </h2>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <img\n            src={NoteIm}\n            alt=\"note\"\n            className={\"detail-action-icon\"}\n            onClick={toggleEditNote}\n          />\n          <img\n            src={city.like ? LikedIm : LikeIm}\n            alt=\"like\"\n            className={\"detail-action-icon\"}\n            onClick={toggleLike}\n          />\n        </div>\n      </div>\n      <Note note={city.note} onSave={saveNote} editing={editingNote} />\n\n      <p style={{ fontSize: 18, fontWeight: 500, marginBottom: 0 }}>\n        CURRENT WEATHER\n      </p>\n      <p className={\"local-time\"}>{city.location.localtime}</p>\n      <div\n        style={{ display: \"flex\", alignItems: \"center\", position: \"relative\" }}\n      >\n        <div className=\"city-detail-icon-ctn\">\n          <img\n            src={city.current.condition.icon}\n            alt=\"weather-icon\"\n            width={150}\n          />\n          <p style={{ marginTop: 8, textAlign: \"center\" }}>\n            {city.current.condition.text}\n          </p>\n        </div>\n\n        {/* temperature */}\n        <div style={{ marginLeft: 16 }}>\n          <div className=\"city-detail-temp\">\n            {city.current.temp_c}&deg;\n            <span style={{ fontSize: 24, marginLeft: -25, opacity: 0.6 }}>\n              C\n            </span>\n          </div>\n          <div className={\"city-detail-feellike\"}>\n            Feel Like {city.current.feelslike_c}&deg;\n          </div>\n        </div>\n      </div>\n\n      <div className=\"city-detail-rows-ctn\">\n        {genRow(\"Wind\", city.current.wind_kph, \"km/h\")}\n        {genRow(\"Wind Degree\", city.current.wind_degree, <>&deg;C</>)}\n        {genRow(\"Wind Direction\", city.current.wind_dir)}\n\n        {genRow(\"Pressure\", city.current.pressure_mb, \"mb\")}\n        {genRow(\"Humidity\", city.current.humidity, \"%\")}\n        {genRow(\"Cloud Cover\", city.current.cloud, \"%\")}\n        {genRow(\"UV Index\", city.current.uv)}\n        {genRow(\"Visibility\", city.current.vis_km, \"km\")}\n      </div>\n    </div>\n  ) : (\n    <div>No result</div>\n  );\n};\n\nexport default CityDetail;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n/** ui */\nimport Header from \"./shared/Header\";\nimport Home from \"./pages/Home\";\nimport CityDetail from \"./pages/CityDetail\";\n\n/** service */\nimport PATH from \"./constants/path\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"app-ctn\">\n        <Header />\n\n        <div className=\"app-content\">\n          <Route path=\"/\" exact component={Home} />\n          <Route\n            path={`${PATH.BASE}${PATH.DETAIL}/:name`}\n            component={CityDetail}\n          />\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}