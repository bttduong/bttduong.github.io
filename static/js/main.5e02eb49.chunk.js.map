{"version":3,"sources":["constants/path.ts","shared/Header/MyWeather.tsx","services/restClient.ts","types.ts","services/constants.ts","services/index.ts","assets/images/search.svg","components/SearchBar/SearchBar.tsx","components/SearchBar/converter.ts","shared/Header/Header.tsx","components/Like/LikeIcon.tsx","components/Like/LikedIcon.tsx","components/Like/Like.tsx","assets/images/close.svg","pages/Home/CityList.tsx","assets/images/liked.svg","pages/Home/Home.tsx","pages/CityDetail/Note.tsx","assets/images/note.png","pages/CityDetail/CloudOffIcon.tsx","pages/CityDetail/CityDetail.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PATH","BASE","DETAIL","MyWeather","props","weather","history","useHistory","style","display","alignItems","marginRight","cursor","onClick","push","pathname","location","name","state","src","current","condition","icon","alt","width","temp_c","toFixed","country","instance","axios","create","baseURL","timeout","defaults","params","Actions","url","get","TOP15","FAVORITES","NOTE","TOP_CITIES","SEPARATOR","topCities","topCitiesStr","localStorage","getItem","sort","a","b","localeCompare","setItem","join","split","city","data","JSON","parse","Date","getTime","localtime_epoch","Promise","resolve","status","restClient","GET_CURRENT","stringify","idx","indexOf","splice","favs","favStr","note","text","SEARCH_HINT","SearchBar","onSearch","useState","searchText","setSearchText","hints","setHints","displayHint","setDisplayHint","delaySearchHint","setDelaySearchHint","handleTextHintRes","res","searchHints","length","map","hint","convertHint","selectHint","className","SearchIm","opacity","margin","value","placeholder","onChange","e","target","clearTimeout","setTimeout","services","then","catch","onKeyPress","event","keyCode","which","onFocus","onBlur","LOCATION_VIEWED","Header","locationViewed","setLocationViewed","myWeather","setMyWeather","useEffect","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","handleSearchRes","isMyWeather","failCb","height","to","exact","activeClassName","marginLeft","error","LikeIcon","viewBox","xmlns","fill","d","Like","React","useContext","AppContext","dispatch","stopPropagation","type","REMOVE_FAV","payload","ADD_FAV","LikedIcon","CityList","label","cities","onItemRemove","cardClick","flex","fontSize","CloseIm","onCardRemove","Home","setTopCities","favCities","setFavCities","forEach","like","c1","c2","LikedIm","filter","c","Note","onSave","editing","setValue","rows","cols","disabled","CloudOffIcon","focusable","aria-hidden","CityDetail","useParams","setCity","setNote","editingNote","setEditingNote","offLine","setOffLine","onLine","genRow","unit","fontWeight","NoteIm","marginBottom","localtime","marginTop","textAlign","feelslike_c","wind_kph","wind_degree","wind_dir","pressure_mb","humidity","cloud","uv","vis_km","initialState","createContext","reducer","action","App","useReducer","Provider","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e02eb49.chunk.js","sourcesContent":["const PATH = {\n  BASE: \"/\",\n  DETAIL: \"detail\",\n};\n\nexport default PATH;\n","/** react */\nimport { useHistory } from \"react-router-dom\";\n\n/** service */\nimport PATH from \"../../constants/path\";\n\n/** styles */\nimport \"./header.css\";\n\n/** types */\nimport { CurrentWeatherRes } from \"../../types/index\";\ntype Props = {\n  weather: CurrentWeatherRes | undefined;\n};\n\nconst MyWeather = (props: Props) => {\n  const { weather } = props;\n  let history = useHistory();\n\n  const onClick = () => {\n    if (weather) {\n      history.push({\n        pathname: `${PATH.BASE}${PATH.DETAIL}/${weather.location.name}`,\n        state: weather,\n      });\n    }\n  };\n  return weather ? (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        marginRight: 20,\n        cursor: \"pointer\",\n      }}\n      onClick={onClick}\n    >\n      <img\n        src={weather.current.condition.icon}\n        alt=\"weather-icon\"\n        style={{ width: 32 }}\n      />\n      {weather.current.temp_c.toFixed(0)}&deg;C\n      {` ${weather.location.name}, ${weather.location.country}`}\n    </div>\n  ) : null;\n};\n\nexport default MyWeather;\n","import axios from \"axios\";\n\nconst BASE = \"https://api.weatherapi.com/v1/\";\n\nconst instance = axios.create({ baseURL: BASE, timeout: 3000 });\ninstance.defaults.params = {};\ninstance.defaults.params[\"key\"] = \"41a3e4d0c8414773969125202200812\"; // TODO:\n\nconst get = (url: string) => {\n  return instance.get(url);\n};\n\nexport default { get };\n","export type AppState = {\n  favs: string[];\n};\n\nexport type ActionType = {\n  type: Actions;\n  payload?: any;\n};\n\nexport enum Actions {\n  ADD_FAV = \"ADD_FAV\",\n  REMOVE_FAV = \"REMOVE_FAV\",\n}\n","export const TOP15 = [\n  \"Tokyo\",\n  \"Delhi\",\n  \"Shanghai\",\n  \"Sao Paulo\",\n  \"Mexico City\",\n  \"Dhaka\",\n  \"Cairo\",\n  \"Beijing\",\n  \"Mumbai\",\n  \"Osaka-Shi\",\n  \"Karachi\",\n  \"Chongqing\",\n  \"Istanbul\",\n  \"Buenos Aires\",\n  \"Kolkata\",\n];\n","import restClient from \"./restClient\";\n\nimport { CurrentWeatherRes } from \"../types/index\";\n\nimport { TOP15 } from \"./constants\";\n\n/** localStorage key */\nconst FAVORITES = \"FAVORITES\";\nconst NOTE = \"note_\";\nconst TOP_CITIES = \"TOP_CITIES\";\nconst SEPARATOR = \"|\";\n\n/** ENDPOINT */\nconst GET_CURRENT = (city: string) => `/current.json?q=${city}`;\nconst SEARCH_HINT = (text: string) => `/search.json?q=${text}`;\n\n// TOP CITIES\nconst getTopCities = (): string[] => {\n  let topCitiesStr = localStorage.getItem(TOP_CITIES);\n  let topCities: string[];\n\n  if (topCitiesStr === null) {\n    topCities = TOP15.sort((a, b) => a.localeCompare(b));\n    localStorage.setItem(TOP_CITIES, topCities.join(SEPARATOR));\n  } else {\n    topCities = topCitiesStr.split(SEPARATOR);\n  }\n\n  return topCities;\n};\n\n// GET CURRENT WEATHER\nconst getCurrentByCity = (city: string) => {\n  const data = localStorage.getItem(city);\n\n  if (data) {\n    const weather = JSON.parse(data) as CurrentWeatherRes;\n\n    // use local storage for 1hour data\n    if (new Date().getTime() / 1000 - weather.location.localtime_epoch < 3600)\n      return new Promise((resolve) => {\n        resolve({ status: 200, data: weather });\n      });\n  }\n\n  return restClient.get(GET_CURRENT(city));\n};\n\nconst saveCurrentByCity = (weather: CurrentWeatherRes, city?: string) => {\n  if (city) localStorage.setItem(city, JSON.stringify(weather));\n  if (weather.location.name !== city)\n    localStorage.setItem(weather.location.name, JSON.stringify(weather));\n};\n\nconst removeTopCity = (name: string) => {\n  const topCitiesStr = localStorage.getItem(TOP_CITIES);\n\n  if (topCitiesStr) {\n    let topCities: string[] = topCitiesStr.split(SEPARATOR);\n\n    const idx = topCities.indexOf(name);\n    if (idx !== -1) {\n      topCities.splice(idx, 1);\n      localStorage.setItem(TOP_CITIES, topCities.join(SEPARATOR));\n    }\n  }\n};\n\n// FAVORITES\nconst getFavorites = () => {\n  const favStr = localStorage.getItem(FAVORITES);\n  let favs: string[];\n\n  if (favStr) {\n    favs = favStr.split(\"|\");\n  } else {\n    favs = [];\n    localStorage.setItem(FAVORITES, \"\");\n  }\n\n  return favs.sort((a, b) => a.localeCompare(b));\n};\n\nconst addFavorite = (city: string) => {\n  const favStr = localStorage.getItem(FAVORITES);\n  let favs: string[];\n\n  if (favStr) {\n    favs = favStr.split(SEPARATOR);\n  } else favs = [];\n\n  favs.push(city);\n\n  localStorage.setItem(FAVORITES, favs.join(SEPARATOR));\n};\n\nconst removeFavorite = (name: string) => {\n  const favStr = localStorage.getItem(FAVORITES);\n\n  if (favStr) {\n    let favs: string[] = favStr.split(SEPARATOR);\n\n    const idx = favs.indexOf(name);\n    if (idx !== -1) {\n      favs.splice(idx, 1);\n      localStorage.setItem(FAVORITES, favs.join(SEPARATOR));\n    }\n  }\n};\n\n// NOTE\nconst getNote = (name: string | undefined) => {\n  if (name) return localStorage.getItem(NOTE + name);\n  return null;\n};\nconst saveNote = (name: string, note: string) => {\n  localStorage.setItem(NOTE + name, note);\n};\n\n// SEARCH, AUTOCOMPLETE\nconst getSearchHint = (text: string) => restClient.get(SEARCH_HINT(text));\n\nexport default {\n  getTopCities,\n  getCurrentByCity,\n  saveCurrentByCity,\n  removeTopCity,\n  getFavorites,\n  addFavorite,\n  removeFavorite,\n  getNote,\n  saveNote,\n  getSearchHint,\n};\n","export default __webpack_public_path__ + \"static/media/search.812c11b6.svg\";","import React, { useState } from \"react\";\n\nimport \"./search-bar.css\";\n\n/** service */\nimport services from \"../../services\";\nimport { convertHint } from \"./converter\";\n\n/** styles */\nimport SearchIm from \"../../assets/images/search.svg\";\n\n/** types */\nimport { SearchItemRes } from \"../../types/index\";\n\ntype Props = {\n  onSearch: (text: string) => void;\n};\n\nconst SearchBar = (props: Props) => {\n  const { onSearch } = props;\n\n  const [searchText, setSearchText] = useState<string>();\n\n  const [hints, setHints] = useState<string[]>();\n  const [displayHint, setDisplayHint] = useState<boolean>(false);\n\n  const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    var code = event.keyCode || event.which;\n    if (code === 13 && searchText) {\n      onSearch(searchText);\n    }\n  };\n\n  const [delaySearchHint, setDelaySearchHint] = useState<any>();\n  const getHint = (text: string) => {\n    clearTimeout(delaySearchHint);\n    setDelaySearchHint(\n      setTimeout(function () {\n        services\n          .getSearchHint(text)\n          .then(handleTextHintRes)\n          .catch(() => setHints([]));\n      }, 500)\n    );\n  };\n\n  const handleTextHintRes = (res: any) => {\n    setHints([]);\n    if (res && res.status === 200 && res.data) {\n      const searchHints = res.data as SearchItemRes[];\n      if (searchHints.length > 0) {\n        setHints(convertHint(searchHints));\n      }\n    }\n  };\n\n  const renderHints = () => {\n    if (hints) {\n      return hints.map((hint: string, idx: number) => {\n        return (\n          <li key={idx} className=\"hint-item\" onClick={() => selectHint(hint)}>\n            {hint}\n          </li>\n        );\n      });\n    }\n    return null;\n  };\n\n  const selectHint = (hint: string) => {\n    setSearchText(hint);\n    setDisplayHint(false);\n    onSearch(hint);\n  };\n\n  return (\n    <div className={\"search-bar-ctn\"}>\n      <img\n        src={SearchIm}\n        alt=\"search\"\n        style={{ opacity: 0.5, margin: \"0 8px 0 12px\", cursor: \"pointer\" }}\n        onClick={() => searchText && onSearch(searchText)}\n      />\n      <input\n        className={\"search-bar-input\"}\n        value={searchText}\n        placeholder={\"Search City\"}\n        onChange={(e) => {\n          setSearchText(e.target.value);\n          getHint(e.target.value);\n        }}\n        onKeyPress={onKeyPress}\n        onFocus={() => setDisplayHint(true)}\n        onBlur={() => setTimeout(() => setDisplayHint(false), 400)}\n      />\n      {hints && hints.length > 0 && displayHint && (\n        <ul className=\"search-hint-ctn\">{renderHints()}</ul>\n      )}\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import { SearchItemRes } from \"../../types/index\";\n\nexport const convertHint = (hints: SearchItemRes[]): string[] => {\n  if (hints && hints.length > 0) {\n    return hints.map((hint) => {\n      return hint.name;\n    });\n  }\n  return [];\n};\n","/** react */\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\n/** ui */\nimport MyWeather from \"./MyWeather\";\nimport SearchBar from \"../../components/SearchBar\";\n\n/** services */\nimport services from \"../../services\";\nimport PATH from \"../../constants/path\";\n\n/** styles */\nimport \"./header.css\";\n\n/** types */\nimport { CurrentWeatherRes } from \"../../types/index\";\n\nconst LOCATION_VIEWED = \"location-viewed\";\n\nconst Header = () => {\n  const [searchText, setSearchText] = useState<string>();\n  const [locationViewed, setLocationViewed] = useState<boolean>(\n    !!localStorage.getItem(LOCATION_VIEWED)\n  );\n  const [myWeather, setMyWeather] = useState<CurrentWeatherRes>();\n\n  let history = useHistory();\n\n  useEffect(() => {\n    const successCb = (position: GeolocationPosition) => {\n      services\n        .getCurrentByCity(\n          `${position.coords.latitude}, ${position.coords.longitude}`\n        )\n        .then(handleSearchRes(true));\n    };\n\n    if (window.navigator.geolocation) {\n      window.navigator.geolocation.getCurrentPosition(successCb);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const handleSearchRes = (isMyWeather: boolean = false) => (res: any) => {\n    if (res && res.status === 200 && res.data && res.data.current) {\n      services.saveCurrentByCity(res.data);\n\n      if (isMyWeather) {\n        setMyWeather(res.data);\n      }\n      if (!isMyWeather || !locationViewed) {\n        setLocationViewed(true);\n        localStorage.setItem(LOCATION_VIEWED, \"viewed\");\n        history.push({\n          pathname: `${PATH.BASE}${PATH.DETAIL}/${res.data.location.name}`,\n          state: res.data,\n        });\n      }\n    } else {\n      failCb();\n    }\n  };\n\n  const failCb = (text: string | undefined = searchText) => {\n    history.push({\n      pathname: `${PATH.BASE}${PATH.DETAIL}/${text}`,\n      state: null,\n    });\n  };\n\n  const search = (text: string) => {\n    if (text) {\n      setSearchText(text);\n      services\n        .getCurrentByCity(text)\n        .then(handleSearchRes())\n        .catch((error) => {\n          failCb(text);\n        });\n    }\n  };\n\n  return (\n    <header className=\"header-ctn\">\n      <div className=\"header-content\">\n        <div style={{ display: \"flex\", height: \"100%\" }}>\n          <NavLink\n            to=\"/\"\n            exact\n            activeClassName=\"header-active\"\n            className=\"header-menu\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            activeClassName=\"header-active\"\n            className=\"header-menu\"\n            style={{ marginLeft: 20 }}\n            to=\"/detail\"\n          >\n            Detail Page\n          </NavLink>\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <MyWeather weather={myWeather} />\n          <SearchBar\n            // searchText={searchText}\n            // setSearchText={setSearchText}\n            onSearch={search}\n          />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","const LikeIcon = ({ className }: { className?: string }) => {\n  return (\n    <svg\n      height=\"24\"\n      width=\"24\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n    >\n      <path\n        fill=\"#57585a\"\n        d=\"M17 1c3.852 0 7 3.148 7 7 0 3.858-2.067 7.513-5.44 10.724C16.158 21.01 13.04 23 12 23s-4.158-1.99-6.56-4.276C2.067 15.514 0 11.858 0 8c0-3.852 3.148-7 7-7 1.917 0 3.688.79 5 2.13C13.312 1.79 15.083 1 17 1zm0 2c-1.677 0-3.205.854-4.176 2.267a1 1 0 0 1-1.648 0C10.205 3.854 8.676 3 7 3 4.252 3 2 5.252 2 8c0 3.215 1.804 6.406 4.82 9.276C8.86 19.218 11.652 21 12 21c.347 0 3.14-1.782 5.18-3.724C20.197 14.406 22 11.215 22 8c0-2.748-2.252-5-5-5z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default LikeIcon;\n","const LikeIcon = ({ className }: { className?: string }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      className={className}\n    >\n      <path\n        fill=\"#FF2636\"\n        d=\"M17 1c3.852 0 7 3.148 7 7 0 3.858-2.067 7.513-5.44 10.724C16.158 21.01 13.04 23 12 23s-4.158-1.99-6.56-4.276C2.067 15.514 0 11.858 0 8c0-3.852 3.148-7 7-7 1.917 0 3.688.79 5 2.13C13.312 1.79 15.083 1 17 1z\"\n      />\n    </svg>\n  );\n};\n\nexport default LikeIcon;\n","import React from \"react\";\n\n/** services */\nimport { AppContext } from \"../../App\";\n\n/** styles */\nimport \"./like.css\";\nimport LikeIcon from \"./LikeIcon\";\nimport LikedIcon from \"./LikedIcon\";\n\n/** type */\nimport { Actions } from \"../../types\";\ntype Props = {\n  name: string;\n};\n\nconst Like = ({ name }: Props) => {\n  const { state, dispatch } = React.useContext(AppContext);\n  const { favs } = state;\n\n  const onToggleLike = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.stopPropagation();\n\n    if (favs.indexOf(name) !== -1) {\n      dispatch({ type: Actions.REMOVE_FAV, payload: name });\n    } else {\n      dispatch({ type: Actions.ADD_FAV, payload: name });\n    }\n  };\n\n  return (\n    <div className=\"like-ctn\" onClick={onToggleLike}>\n      <LikedIcon\n        className={favs.indexOf(name) !== -1 ? \"active\" : \"in-active\"}\n      />\n      <LikeIcon\n        className={favs.indexOf(name) !== -1 ? \"in-active\" : \"active\"}\n      />\n    </div>\n  );\n};\n\nexport default Like;\n","export default __webpack_public_path__ + \"static/media/close.d1a6d0d8.svg\";","/** react */\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n/** ui */\nimport Like from \"../../components/Like\";\n\n/** services */\nimport PATH from \"../../constants/path\";\n\n/** styles */\nimport \"./city-list.css\";\nimport CloseIm from \"../../assets/images/close.svg\";\n\n/** types */\nimport { CurrentWeatherRes } from \"../../types/index\";\n\ntype Props = {\n  label: string | JSX.Element;\n  cities: CurrentWeatherRes[];\n  onItemRemove?: (city: string) => void;\n};\n\nconst CityList = (props: Props) => {\n  const { label, cities, onItemRemove } = props;\n\n  let history = useHistory();\n\n  const cardClick = (city: CurrentWeatherRes) => {\n    history.push({\n      pathname: `${PATH.BASE}${PATH.DETAIL}/${city.location.name}`,\n      state: city,\n    });\n  };\n\n  const onCardRemove = (\n    event: React.MouseEvent<HTMLImageElement, MouseEvent>,\n    name: string\n  ) => {\n    event.stopPropagation();\n    onItemRemove && onItemRemove(name);\n  };\n\n  return (\n    <div style={{ margin: \"24px 0\" }}>\n      <div className=\"city-list-header-ctn\">{label}</div>\n\n      <div className=\"city-list\">\n        {cities && cities.length > 0 ? (\n          cities.map((city, idx) => (\n            // CITY CARD\n            <div\n              key={idx}\n              className={\"city-card\"}\n              onClick={() => cardClick(city)}\n            >\n              <div className={\"city-card-content\"}>\n                <div style={{ flex: 1 }}>\n                  {city.location.name}, <br />\n                  {city.location.country}\n                </div>\n                <img\n                  src={city.current.condition.icon}\n                  alt=\"weather-icon\"\n                  className={\"city-weather-icon\"}\n                />\n                <span style={{ fontSize: 36, width: 80 }}>\n                  {city.current.temp_c.toFixed(0)}&deg;C\n                </span>\n              </div>\n\n              <div className=\"city-card-action-ctn\">\n                <Like name={city.location.name} />\n                {onItemRemove && (\n                  <img\n                    src={CloseIm}\n                    alt=\"close\"\n                    className=\"city-remove\"\n                    onClick={(event) => onCardRemove(event, city.location.name)}\n                  />\n                )}\n              </div>\n            </div>\n          ))\n        ) : (\n          <p style={{ opacity: 0.5, margin: \"0 0 24px 24px\" }}>Empty list</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CityList;\n","export default __webpack_public_path__ + \"static/media/liked.38eb2764.svg\";","/** react */\nimport React, { useState, useEffect } from \"react\";\n\n/** component */\nimport CityList from \"./CityList\";\n\n/** services */\nimport services from \"../../services\";\nimport { AppContext } from \"../../App\";\n\n/** styles */\nimport LikedIm from \"../../assets/images/liked.svg\";\n\n/** types */\nimport { CurrentWeatherRes } from \"../../types/index\";\n\nconst Home = () => {\n  const [topCities, setTopCities] = useState<CurrentWeatherRes[]>([]);\n  const [favCities, setFavCities] = useState<CurrentWeatherRes[]>([]);\n  const { state } = React.useContext(AppContext);\n\n  useEffect(() => {\n    const topCities = services.getTopCities();\n\n    topCities.forEach((city) => {\n      if (city) {\n        services.getCurrentByCity(city).then((res: any) => {\n          if (res && res.status === 200) {\n            if (res.data && res.data.current) {\n              setTopCities((cities) => [...cities, res.data]);\n              services.saveCurrentByCity(res.data, city);\n            }\n          }\n        });\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    setFavCities([]);\n\n    state.favs.forEach((city) => {\n      services.getCurrentByCity(city).then((res: any) => {\n        if (res && res.status === 200) {\n          if (res.data && res.data.current) {\n            setFavCities((cities) =>\n              [...cities, { ...res.data, like: true }].sort(\n                (c1: CurrentWeatherRes, c2: CurrentWeatherRes) => {\n                  return c1.location.name > c2.location.name ? 1 : -1;\n                }\n              )\n            );\n\n            services.saveCurrentByCity(res.data);\n          }\n        }\n      });\n    });\n  }, [state.favs]);\n\n  const onRemoveTopCity = (name: string) => {\n    services.removeTopCity(name);\n    setTopCities((cities) => cities.filter((c) => c.location.name !== name));\n  };\n\n  return (\n    <div>\n      <CityList\n        label={\n          <>\n            Favorites\n            <img\n              src={LikedIm}\n              alt=\"like\"\n              style={{ width: 24, marginLeft: 16 }}\n            />\n          </>\n        }\n        cities={favCities}\n      />\n\n      <CityList\n        label=\"Top Cities\"\n        cities={topCities}\n        onItemRemove={onRemoveTopCity}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n","/** react */\nimport React, { useState, useEffect } from \"react\";\n\n/** styles */\nimport \"./city-detail.css\";\n\ntype Props = {\n  note: string | null;\n  onSave: (note: string | null) => void;\n  editing: boolean;\n};\n\nconst Note = (props: Props) => {\n  const { note, onSave, editing } = props;\n\n  const [value, setValue] = useState(note);\n\n  useEffect(() => {\n    setValue(note);\n  }, [note]);\n\n  const updateValue = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setValue(e.target.value);\n  };\n\n  const onSaveValue = () => {\n    onSave(value);\n  };\n\n  const onRemove = () => {\n    onSave(\"\");\n    setValue(\"\");\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"flex-end\" }}>\n      {!editing && value === \"\" ? null : (\n        <textarea\n          placeholder=\"your note here...\"\n          className=\"text-area\"\n          rows={3}\n          cols={50}\n          onChange={updateValue}\n          disabled={!editing}\n          value={value ? value : \"\"}\n        />\n      )}\n      {editing && (\n        <div>\n          <button className=\"button-remove\" onClick={onRemove}>\n            Remove\n          </button>\n          <button className=\"button-save\" onClick={onSaveValue}>\n            Save\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Note;\n","export default __webpack_public_path__ + \"static/media/note.dfee6669.png\";","const CloudOffIcon = () => {\n  return (\n    <svg\n      focusable=\"false\"\n      viewBox=\"0 0 24 24\"\n      aria-hidden=\"true\"\n      style={{ width: 160 }}\n    >\n      <path d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4c-1.48 0-2.85.43-4.01 1.17l1.46 1.46C10.21 6.23 11.08 6 12 6c3.04 0 5.5 2.46 5.5 5.5v.5H19c1.66 0 3 1.34 3 3 0 1.13-.64 2.11-1.56 2.62l1.45 1.45C23.16 18.16 24 16.68 24 15c0-2.64-2.05-4.78-4.65-4.96zM3 5.27l2.75 2.74C2.56 8.15 0 10.77 0 14c0 3.31 2.69 6 6 6h11.73l2 2L21 20.73 4.27 4 3 5.27zM7.73 10l8 8H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h1.73z\"></path>\n    </svg>\n  );\n};\n\nexport default CloudOffIcon;\n","/** react */\nimport React, { useState, useEffect } from \"react\";\nimport { StaticContext } from \"react-router\";\nimport { RouteComponentProps, useParams } from \"react-router-dom\";\n\n/** ui */\nimport Note from \"./Note\";\nimport Like from \"../../components/Like\";\n\n/** services */\nimport services from \"../../services\";\n\n/** styles */\nimport \"./city-detail.css\";\nimport NoteIm from \"../../assets/images/note.png\";\nimport CloudOffIcon from \"./CloudOffIcon\";\n\n/** types */\nimport { CurrentWeatherRes } from \"../../types/index\";\n\nconst CityDetail = (\n  props: RouteComponentProps<{}, StaticContext, CurrentWeatherRes>\n) => {\n  let { name } = useParams<{ name: string }>();\n  const { location } = props;\n  const { state } = location;\n\n  const [city, setCity] = useState<CurrentWeatherRes | null>(state);\n  const [note, setNote] = useState<string | null>(\n    services.getNote(city?.location.name)\n  );\n  const [editingNote, setEditingNote] = useState(\n    services.getNote(city?.location.name) === null\n  );\n  const [offLine, setOffLine] = useState(false);\n\n  useEffect(() => {\n    setCity(state);\n  }, [state]);\n\n  useEffect(() => {\n    setOffLine(false);\n\n    if (!city && name) {\n      services\n        .getCurrentByCity(name)\n        .then((res: any) => {\n          if (res && res.status === 200 && res.data && res.data.current) {\n            const city = res.data as CurrentWeatherRes;\n\n            setCity(city);\n            services.saveCurrentByCity(city, name);\n          } else {\n            setCity(null);\n          }\n        })\n        .catch(() => {\n          if (!window.navigator.onLine) {\n            setOffLine(true);\n          }\n        });\n    }\n  }, [city, name]);\n\n  useEffect(() => {\n    if (city?.location.name) {\n      setNote(services.getNote(city.location.name));\n    }\n  }, [city?.location.name]);\n\n  const toggleEditNote = () => {\n    if (!editingNote) setEditingNote(!editingNote);\n  };\n  const saveNote = (note: string | null) => {\n    setNote(note);\n    if (city) {\n      if (note) services.saveNote(city.location.name, note);\n      else services.saveNote(city.location.name, \"\");\n    }\n    setEditingNote(false);\n  };\n\n  const genRow = (\n    label: string,\n    value: string | number,\n    unit: string | JSX.Element = \"\"\n  ) => {\n    return (\n      <div className={\"city-detail-row\"}>\n        <div style={{ opacity: 0.8 }}>{label}</div>\n        <div style={{ fontSize: 18, fontWeight: 500 }}>\n          {value}\n          {unit}\n        </div>\n      </div>\n    );\n  };\n\n  if (!window.navigator.onLine && offLine)\n    return (\n      <div>\n        <CloudOffIcon />\n        <br />\n        Please recheck your network connection\n      </div>\n    );\n\n  return city ? (\n    <div>\n      <div className=\"detail-header-ctn\">\n        <h2>\n          {city.location.name}, {city.location.country}\n        </h2>\n        <div style={{ display: \"flex\", alignItems: \"center\", height: 19 }}>\n          <img\n            src={NoteIm}\n            alt=\"note\"\n            className={\"detail-note-icon\"}\n            onClick={toggleEditNote}\n          />\n          <Like name={city.location.name} />\n        </div>\n      </div>\n      <Note note={note} onSave={saveNote} editing={editingNote} />\n\n      <p style={{ fontSize: 18, fontWeight: 500, marginBottom: 0 }}>\n        CURRENT WEATHER\n      </p>\n      <p className={\"local-time\"}>{city.location.localtime}</p>\n      <div\n        style={{ display: \"flex\", alignItems: \"center\", position: \"relative\" }}\n      >\n        <div className=\"city-detail-icon-ctn\">\n          <img\n            src={city.current.condition.icon}\n            alt=\"weather-icon\"\n            width={150}\n          />\n          <p style={{ marginTop: 8, textAlign: \"center\" }}>\n            {city.current.condition.text}\n          </p>\n        </div>\n\n        {/* temperature */}\n        <div style={{ marginLeft: 16 }}>\n          <div className=\"city-detail-temp\">\n            {city.current.temp_c}&deg;\n            <span style={{ fontSize: 24, marginLeft: -25, opacity: 0.6 }}>\n              C\n            </span>\n          </div>\n          <div className={\"city-detail-feellike\"}>\n            Feel Like {city.current.feelslike_c}&deg;\n          </div>\n        </div>\n      </div>\n\n      <div className=\"city-detail-rows-ctn\">\n        {genRow(\"Wind\", city.current.wind_kph, \"km/h\")}\n        {genRow(\"Wind Degree\", city.current.wind_degree, <>&deg;C</>)}\n        {genRow(\"Wind Direction\", city.current.wind_dir)}\n\n        {genRow(\"Pressure\", city.current.pressure_mb, \"mb\")}\n        {genRow(\"Humidity\", city.current.humidity, \"%\")}\n        {genRow(\"Cloud Cover\", city.current.cloud, \"%\")}\n        {genRow(\"UV Index\", city.current.uv)}\n        {genRow(\"Visibility\", city.current.vis_km, \"km\")}\n      </div>\n    </div>\n  ) : (\n    <div>No result</div>\n  );\n};\n\nexport default CityDetail;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n/** ui */\nimport Header from \"./shared/Header\";\nimport Home from \"./pages/Home\";\nimport CityDetail from \"./pages/CityDetail\";\n\n/** service */\nimport PATH from \"./constants/path\";\nimport services from \"./services\";\n\n/** types */\nimport { AppState, ActionType, Actions } from \"./types\";\n\nconst initialState: AppState = {\n  favs: services.getFavorites(),\n};\n\nconst AppContext = React.createContext<{\n  state: AppState;\n  dispatch: React.Dispatch<ActionType>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst reducer = (state: AppState, action: ActionType): AppState => {\n  switch (action.type) {\n    case Actions.ADD_FAV:\n      services.addFavorite(action.payload);\n      return { ...state, favs: [...state.favs, action.payload] };\n\n    case Actions.REMOVE_FAV:\n      services.removeFavorite(action.payload);\n      const favs = [...state.favs];\n      favs.splice(favs.indexOf(action.payload), 1);\n      return {\n        ...state,\n        favs,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      <Router>\n        <div className=\"app-ctn\">\n          <Header />\n\n          <div className=\"app-content\">\n            <Route path=\"/\" exact component={Home} />\n            <Route\n              path={`${PATH.BASE}${PATH.DETAIL}/:name`}\n              component={CityDetail}\n            />\n          </div>\n        </div>\n      </Router>\n    </AppContext.Provider>\n  );\n};\n\nexport { App, AppContext };\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}